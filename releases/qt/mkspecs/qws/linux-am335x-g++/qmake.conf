#
# qmake configuration for building with $${TOOLCHAIN}-g++
#

include(../../common/linux.conf)
include(../../common/gcc-base-unix.conf)
include(../../common/g++-unix.conf)
include(../../common/qws.conf)

TOOLCHAIN = /usr/local/alm_ref/build_tools/toolchains/gcc-linaro-4.9-2015.05-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf

#Compiler Flags to take advantage of the ARM architecture
#QMAKE_CFLAGS_RELEASE =   -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=softfp
#QMAKE_CXXFLAGS_RELEASE = -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=softfp
QMAKE_CFLAGS_RELEASE =   -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=hard
QMAKE_CXXFLAGS_RELEASE = -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=hard

# modifications to g++.conf
QMAKE_CC                = $${TOOLCHAIN}-gcc
QMAKE_CXX               = $${TOOLCHAIN}-g++
QMAKE_LINK              = $${TOOLCHAIN}-g++
QMAKE_LINK_SHLIB        = $${TOOLCHAIN}-g++

# modifications to linux.conf
QMAKE_AR                = $${TOOLCHAIN}-ar cqs
QMAKE_OBJCOPY           = $${TOOLCHAIN}-objcopy
QMAKE_STRIP             = $${TOOLCHAIN}-strip

load(qt_config)
