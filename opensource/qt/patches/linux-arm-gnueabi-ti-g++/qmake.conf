#
# qmake configuration for building with arm-linux-gnueabi-g++
#

MAKEFILE_GENERATOR      = UNIX
CONFIG                  += incremental gdb_dwarf_index
QMAKE_INCREMENTAL_STYLE = sublib

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/g++-unix.conf)

ROOTFS_PATH=/home/prabindh/work1/ubuntu-rootfs-dec/media/rootfs
TOOLCHAIN_PREFIX=/opt/linaro/gcc-linaro-arm-linux-gnueabi-2012.03-20120326_linux/bin/arm-linux-gnueabi

# Change the required paths here
QMAKE_INCDIR          = $${ROOTFS_PATH}/usr/include $${ROOTFS_PATH}/usr/include/glib-2.0 $${ROOTFS_PATH}/usr/lib/glib-2.0/include/ $${ROOTFS_PATH}/usr/include/libxml2/ $${ROOTFS_PATH}/usr/include/freetype2 $${ROOTFS_PATH}/usr/include/dbus-1.0 $${ROOTFS_PATH}/usr/include/dbus-1.0/dbus

QMAKE_LIBDIR          = $${ROOTFS_PATH}/usr/lib/arm-linux-gnueabi $${ROOTFS_PATH}/usr/lib

QMAKE_INCDIR_OPENGL_ES2 = $${ROOTFS_PATH}/usr/include/sgx/OGLES2
QMAKE_LIBDIR_OPENGL_ES2 = $${ROOTFS_PATH}/opt/gfxlibraries/gfx_rel_es8.x
QMAKE_INCDIR_EGL      = $${QMAKE_INCDIR_OPENGL_ES2}
QMAKE_LIBDIR_EGL      = $${QMAKE_LIBDIR_OPENGL_ES2}

# libs
QMAKE_LIBS            = -lxml2 -lz -lts -lasound -lfreetype -lexpat \
-lfontconfig -lpng -lpthread -Wl,-rpath-link=$${ROOTFS_PATH}/usr/lib/arm-linux-gnueabi -Wl,-rpath-link=$${ROOTFS_PATH}/usr/lib

QMAKE_LIBS_OPENGL_ES2= -lEGL -lIMGegl -lsrv_um -lGLESv2 -lGLES_CM -lusc -Wl,-rpath-link=/home/prabindh/work1/ubuntu-rootfs-dec/media/rootfs/opt/gfxlibraries/gfx_rel_es8.x -L/home/prabindh/work1/ubuntu-rootfs-dec/media/rootfs/opt/gfxlibraries/gfx_rel_es8.x -Wl,-rpath-link=/home/prabindh/work1/ubuntu-rootfs-dec/media/rootfs/lib/arm-linux-gnueabi -L/home/prabindh/work1/ubuntu-rootfs-dec/media/rootfs/lib/arm-linux-gnueabi

QMAKE_LIBS_EGL= $${QMAKE_LIBS_OPENGL_ES2}
QMAKE_LIBS_THREAD     = -lpthread

QMAKE_CFLAGS_RELEASE = -O3 -march=armv7-a -mfpu=neon -mfloat-abi=softfp 

QMAKE_CXXFLAGS_RELEASE = $$QMAKE_CFLAGS_RELEASE

QMAKE_CC                = $${TOOLCHAIN_PREFIX}-gcc
QMAKE_CXX               = $${TOOLCHAIN_PREFIX}-g++
QMAKE_LINK              = $${QMAKE_CXX}
QMAKE_LINK_SHLIB        = $${QMAKE_CXX}

QMAKE_AR                = $${TOOLCHAIN_PREFIX}-ar cqs
QMAKE_OBJCOPY           = $${TOOLCHAIN_PREFIX}-objcopy
QMAKE_STRIP             = $${TOOLCHAIN_PREFIX}-strip

load(qt_config)
